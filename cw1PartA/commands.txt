# cw1PartA - Database Creation in MongoDB

# create the databases
use cw1PartA

# create the collections
db.createCollection("users")
db.createCollection("books")
db.createCollection("comments")
db.createCollection("authors")
db.createCollection("categories")
db.createCollection("sampleImages")

# create the indexes
db.users.createIndex({username: 1},{unique: true})
db.books.createIndex({category: 1,publication_year: 1})
db.books.createIndex({author: 1})
db.books.createIndex({description: "text",title: "text"})
db.comments.createIndex({book: 1, user: 1, date: 1}, {unique: true})
db.authors.createIndex({name: 1},{unique: true})
db.categories.createIndex({name: 1},{unique: true})
db.sampleImages.createIndex({book: 1})

# populate the  users collection
db.users.insertMany([
    {username: "Sam",password: "1234",email: "samiswise@gmail.com",name: "Sam Gamgee",comments:[]},
    {username: "Frodo",password: "1234",email: "ballerbaggins@gmail.com",name: "Frodo Baggins",comments:[]},
    {username: "Gandalf",password: "1234",email: "whitewizard@gmail.com",name: "Gandalf the White",comments:[]},
    {username: "Smeagol",password: "1234",email: "gollum@gmail.com",name: "Smeagol Gollumson",comments:[]},
    {username: "Bilbo",password: "1234",email: "bigbilbobaggins@gmail.com",name:"Bilbo Baggins",comments:[]},
])

#populate the categories collection
db.categories.insertMany([
  { name: "Fiction",titles: []},
  { name: "Non-fiction",titles: [] },
  { name: "Science fiction",titles: [] },
  { name: "Mystery",titles: [] },
  { name: "Fantasy",titles: [] },
  { name: "Horror",titles: []}
])

# populate the authors collection
db.authors.insertMany([
  { name: "J.R.R. Tolkien",titles: []},
  { name: "Irvine Welsh",titles: [] },
  { name: "David Attenborough",titles: [] },
  { name: "Issac Asimov",titles: [] },
  { name: "Stephen King",titles: [] },
  { name: "George Orwell",titles: [] },
  { name: "Agatha Christie",titles: [] },
  { name: "Charles Dickens",titles: [] },
  { name: "H.G. Wells",titles: [] },
  { name: "Douglas Adams",titles: [] }])

  # populate the sampleImages collection for all of the following books
  db.sampleImages.insertMany([{book:"The Fellowship of the Ring", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/41EvXAhzqOL._SY346_.jpg", caption: "Cover Page"},{book:"The Two Towers", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/41HPB3X9+pL._SY346_.jpg", caption: "Cover Page"},{book:"The Return of the King", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/41XVihLkl+L._SY346_.jpg", caption: "Cover Page"},{book:"The Hobbit", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/41DfP7NpIIL._SY291_BO1,204,203,200_QL40_ML2_.jpg", caption: "Cover Page"},{book:"The Silmarillion", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/41xJlu8VNaL._SY291_BO1,204,203,200_QL40_ML2_.jpg", caption: "Cover Page"},{book:"Trainspotting", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/41x5WCUOJfL._SY291_BO1,204,203,200_QL40_ML2_.jpg", caption: "Cover Page"},{book:"Porno", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/41T1ja6CIBL._SY291_BO1,204,203,200_QL40_ML2_.jpg", caption: "Cover Page"},{book:"Skagboys", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/51okFrv9O2L._SY291_BO1,204,203,200_QL40_ML2_.jpg", caption: "Cover Page"},{book:"The Acid House", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/61rjyu0XwXS._AC_US218_..jpg", caption: "Cover Page"},{book:"Glue", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/71CJNKfOs+L._AC_UY218_.jpg", caption: "Cover Page"},{book:"Life on Earth", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/710qMOOpqdL._AC_US218_..jpg", caption: "Cover Page"},{book:"The Private Life of Plants", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/516UaxPL6BL._AC_UY218_.jpg", caption: "Cover Page"},{book:"Blue Planet", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/71hoSiss6xL._AC_SY445_.jpg", caption: "Cover Page"},{book:"Planet Earth", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/81bYtCqt4zL._AC_SY445_.jpg", caption: "Cover Page"},{book:"A Life on Our Planet", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/71DsXkjgc4L._AC_US218_..jpg", caption: "Cover Page"},{book:"Foundation", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/81fHs+0uzEL._AC_UY218_.jpg", caption: "Cover Page"},{book:"I,Robot", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/81eZK+ocpKL._AC_UY218_.jpg", caption: "Cover Page"},{book:"The Caves of Steel", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/310951BDZBL._AC_UY218_.jpg", caption: "Cover Page"},{book:"The Gods Themselves", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/51C9NNP0FKL._AC_UY218_.jpg", caption: "Cover Page"},{book:"The End of Eternity", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/61Rsq90GC5L._AC_UY218_.jpg", caption: "Cover Page"},{book:"The Shining", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/71LWM5fjbRL._AC_US218_..jpg", caption: "Cover Page"},{book:"It", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/71h8vXcfs5L._AC_US218_..jpg", caption: "Cover Page"},{book:"Carrie", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/91YBn0MG3BL._AC_US218_..jpg", caption: "Cover Page"},{book:"Pet Sematary", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/91XjnExVxjL._AC_US218_..jpg", caption: "Cover Page"},{book:"Salem’s Lot", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/81n0jyC7NpS._AC_US218_..jpg", caption: "Cover Page"},{book:"1984", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/91CAtU00MpL._AC_UY218_.jpg", caption: "Cover Page"},{book:"Animal Farm", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/31Bi4h8xInL._AC_UY218_.jpg", caption: "Cover Page"},{book:"Homage to Catalonia", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/712UjqJvzkL._AC_UY218_.jpg", caption: "Cover Page"},{book:"Keep the Aspidistra Flying", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/8152tQs4gIL._AC_UY218_.jpg", caption: "Cover Page"},{book:"Burmese Days", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/91ldAkS9hLL._AC_UY218_.jpg", caption: "Cover Page"},{book:"Murder on the Orient Express", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/815W7WqPBJL._AC_UY218_.jpg", caption: "Cover Page"},{book:"And Then There Were None", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/71NFpKJ0k2L._AC_UY218_.jpg", caption: "Cover Page"},{book:"The Murder of Roger Ackroyd", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/81sjzZR9JBL._AC_UY218_.jpg", caption: "Cover Page"},{book:"Death on the Nile", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/81Z-dL93a-L._AC_UY218_.jpg", caption: "Cover Page"},{book:"A Pocket Full of Rye", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/71Nj5Pgo8DL._AC_UY218_.jpg", caption: "Cover Page"},{book:"Oliver Twist", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/71demmSgHTL._AC_UY218_.jpg", caption: "Cover Page"},{book:"Great Expectations", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/81I+m992QPL._AC_UY218_.jpg", caption: "Cover Page"},{book:"David Copperfield", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/816cH+XmkuL._AC_UY218_.jpg", caption: "Cover Page"},{book:"The Time Machine", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/91l7+QG82NL._AC_US218_..jpg", caption: "Cover Page"},{book:"The War of the Worlds", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/81ubDe7SwpL._AC_US218_..jpg", caption: "Cover Page"},{book:"The Island of Dr. Moreau", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/818L42xQbfL._AC_US218_..jpg", caption: "Cover Page"},{book:"The Invisible Man", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/714FcGQlseL._AC_US218_..jpg", caption: "Cover Page"},{book:"The Shape of Things to Come", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/71EQ55eraQL._AC_UY218_.jpg", caption: "Cover Page"},{book:"The Hitchhiker’s Guide to the Galaxy", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/816nXdf490L._AC_US218_..jpg", caption: "Cover Page"},{book:"The Restaurant at the End of the Universe", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/81c+nZwjzDL._AC_US218_..jpg", caption: "Cover Page"},{book:"Life,the Universe and Everything", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/81wGDmo3osL._AC_US218_..jpg", caption: "Cover Page"},{book:"So Long,and Thanks for All the Fish", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/81zjgwacswL._AC_US218_..jpg", caption: "Cover Page"},{book:"Mostly Harmless", image: "https://m.media-amazon.com/images/W/IMAGERENDERING_521856-T1/images/I/81ioUJ+rfCL._AC_US218_..jpg", caption: "Cover Page"},    
  ])

# populate the books collection
db.books.insertMany([
    {title: "The Fellowship of the Ring",author: "J.R.R. Tolkien",publication_year: 1954,category: "Fantasy",description: "The first book in the Lord of the Rings trilogy",storageQuantity: 10,availableQuantity: 10,comments: [],sampleImages: []},{title: "The Two Towers",author: "J.R.R. Tolkien",publication_year: 1954,category: "Fantasy",description: "The second book in the Lord of the Rings trilogy",storageQuantity: 10,availableQuantity: 10,comments: [],sampleImages: []},{title: "The Return of the King",author: "J.R.R. Tolkien",publication_year: 1955,category: "Fantasy",description: "The third book in the Lord of the Rings trilogy",storageQuantity: 10,availableQuantity: 10,comments: [],sampleImages: []},{title: "The Hobbit",author: "J.R.R. Tolkien",publication_year: 1937,category: "Fantasy",description: "The prequel to the Lord of the Rings trilogy",storageQuantity: 10,availableQuantity: 10,comments: [],sampleImages: []},{title: "The Silmarillion",author: "J.R.R. Tolkien",publication_year: 1977,category: "Fantasy",description: "The history of Middle Earth",storageQuantity: 10,availableQuantity: 10,comments: [],sampleImages: []},{title: "Trainspotting",author: "Irvine Welsh",publication_year: 1993,category: "Fiction",description: "A novel about heroin addiction",storageQuantity: 10,availableQuantity: 10,comments: [],sampleImages: []},{title: "Porno",author: "Irvine Welsh",publication_year: 2002,category: "Fiction",description: "A sequel to Trainspotting that follows the characters’ involvement in the pornography industry",storageQuantity: 10,availableQuantity: 10,comments:[],sampleImages:[] },{title:"Skagboys" ,author:"Irvine Welsh" ,publication_year :2012 ,category:"Fiction" ,description:"A prequel to Trainspotting that depicts the origins of the characters’ drug addiction" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title:"The Acid House" ,author:"Irvine Welsh" ,publication_year :1994 ,category:"Fiction" ,description:"A collection of short stories that explore various aspects of Scottish life and culture" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title:"Glue" ,author:"Irvine Welsh" ,publication_year :2001 ,category:"Fiction" ,description:"A novel that follows the lives of four friends from Edinburgh over four decades" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title: "Life on Earth",author: "David Attenborough",publication_year: 1979,category: "Non-fiction",description: "A book that accompanies the television series of the same name that explores the diversity of life on Earth",storageQuantity: 10,availableQuantity: 10,comments: [],sampleImages: []},{title: "The Private Life of Plants",author: "David Attenborough",publication_year: 1995,category: "Non-fiction",description: "A book that accompanies the television series of the same name that reveals the secrets of plant life and behavior",storageQuantity: 10,availableQuantity: 10,comments:[],sampleImages:[] },{title:"Blue Planet" ,author:"David Attenborough" ,publication_year :2001 ,category:"Non-fiction" ,description:"A book that accompanies the television series of the same name that showcases the wonders and challenges of life in the oceans" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title:"Planet Earth" ,author:"David Attenborough" ,publication_year :2006 ,category:"Non-fiction" ,description:"A book that accompanies the television series of the same name that depicts the natural beauty and diversity of Earth’s habitats and wildlife" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title:"A Life on Our Planet" ,author:"David Attenborough" ,publication_year :2020 ,category:"Non-fiction" ,description:"A book that reflects on David Attenborough’s personal experiences and observations of nature and offers a vision for a sustainable future for humanity and the planet" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title: "Foundation",author: "Isaac Asimov",publication_year: 1951,category: "Science fiction",description: "The first book in the Foundation series that follows the efforts of a group of scientists to preserve civilization after the fall of the Galactic Empire",storageQuantity: 10,availableQuantity: 10,comments: [],sampleImages: []},{title: "I,Robot",author: "Isaac Asimov",publication_year: 1950,category: "Science fiction",description: "A collection of short stories that explore the ethical and social implications of robotics and artificial intelligence",storageQuantity: 10,availableQuantity: 10,comments:[],sampleImages:[] },{title:"The Caves of Steel" ,author:"Isaac Asimov" ,publication_year :1954 ,category:"Science fiction" ,description:"The first book in the Robot series that features a detective and a humanoid robot who must solve a murder mystery in a futuristic city" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title:"The Gods Themselves" ,author:"Isaac Asimov" ,publication_year :1972 ,category:"Science fiction" ,description:"A novel that deals with the consequences of an exchange of matter and energy between parallel universes" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title:"The End of Eternity" ,author:"Isaac Asimov" ,publication_year :1955 ,category:"Science fiction" ,description:"A novel that follows a time traveler who falls in love with a woman from a different era and decides to alter history for her sake" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },
     {title: "The Shining",author: "Stephen King",publication_year: 1977,category: "Horror",description: "A novel that follows a family who moves into a haunted hotel and becomes tormented by supernatural forces",storageQuantity: 10,availableQuantity: 10,comments: [],sampleImages: []},{title: "It",author: "Stephen King",publication_year: 1986,category: "Horror",description: "A novel that follows a group of friends who are terrorized by a shape-shifting entity that feeds on their fears",storageQuantity: 10,availableQuantity: 10,comments:[],sampleImages:[] },{title:"Carrie" ,author:"Stephen King" ,publication_year :1974 ,category:"Horror" ,description:"A novel that follows a teenage girl who develops telekinetic powers and takes revenge on her abusive peers and mother" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title:"Pet Sematary" ,author:"Stephen King" ,publication_year :1983 ,category:"Horror" ,description:"A novel that follows a family who discovers a mysterious burial ground that can resurrect the dead with horrific consequences" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title:"Salem’s Lot" ,author:"Stephen King" ,publication_year :1975 ,category:"Horror" ,description:"A novel that follows a writer who returns to his hometown and finds it infested by vampires" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] } ,
     {title: "1984",author: "George Orwell",publication_year: 1949,category: "Science fiction",description: "A novel that depicts a totalitarian society where the government controls every aspect of life and manipulates reality through propaganda and surveillance",storageQuantity: 10,availableQuantity: 10,comments: [],sampleImages: []},{title: "Animal Farm",author: "George Orwell",publication_year: 1945,category: "Fiction",description: "A novel that uses farm animals as allegories for the events of the Russian Revolution and the rise of Stalinism",storageQuantity: 10,availableQuantity: 10,comments:[],sampleImages:[] },{title:"Homage to Catalonia" ,author:"George Orwell" ,publication_year :1938 ,category:"Non-fiction" ,description:"A book that recounts George Orwell’s personal experiences and observations during the Spanish Civil War" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title:"Keep the Aspidistra Flying" ,author:"George Orwell" ,publication_year :1936 ,category:"Fiction" ,description:"A novel that follows a young man who quits his job as an advertising copywriter and struggles with poverty and social expectations in London" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title:"Burmese Days" ,author:"George Orwell" ,publication_year :1934 ,category:"Fiction" ,description:"A novel that depicts the life of a British colonial officer in Burma and his conflicts with imperialism and racism" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title: "Murder on the Orient Express",author: "Agatha Christie",publication_year: 1934,category: "Mystery",description: "A novel that features Hercule Poirot who investigates a murder on a train that is stranded by a snowstorm",storageQuantity: 10,availableQuantity: 10,comments: [],sampleImages: []},{title: "And Then There Were None",author: "Agatha Christie",publication_year: 1939,category: "Mystery",description: "A novel that follows ten strangers who are invited to an isolated island and are killed one by one according to a nursery rhyme",storageQuantity: 10,availableQuantity: 10,comments:[],sampleImages:[] },{title:"The Murder of Roger Ackroyd" ,author:"Agatha Christie" ,publication_year :1926 ,category:"Mystery" ,description:"A novel that features Hercule Poirot who solves the murder of a wealthy man in a small village with an unexpected twist" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title:"Death on the Nile" ,author:"Agatha Christie" ,publication_year :1937 ,category:"Mystery" ,description:"A novel that features Hercule Poirot who investigates a murder on a cruise ship on the Nile River involving a love triangle" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title:"A Pocket Full of Rye" ,author:"Agatha Christie" ,publication_year :1953 ,category:"Mystery" ,description:"A novel that features Miss Marple who solves the murder of a businessman and his family members using clues from a nursery rhyme" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },
     {title:"Oliver Twist" ,author:"Charles Dickens" ,publication_year :1838 ,category:"Fiction" ,description:"A novel that follows the life of an orphan boy who escapes from a workhouse and joins a gang of pickpockets in London" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },
     {title:"Great Expectations" ,author:"Charles Dickens" ,publication_year :1861 ,category:"Fiction" ,description:"A novel that tells the story of Pip,a young orphan who becomes a gentleman with the help of a mysterious benefactor and falls in love with an unattainable woman" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title:"David Copperfield" ,author:"Charles Dickens" ,publication_year :1850 ,category:"Fiction" ,description:"A novel that depicts the personal and professional struggles of David Copperfield,from his childhood to his adulthood,as he faces poverty,abuse,betrayal and romance" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title:"The Time Machine" ,author:"H.G. Wells" ,publication_year :1895 ,category:"Science fiction" ,description:"A novel that features a Victorian scientist who travels to the year 802,701 and encounters two races of human descendants: the peaceful Eloi and the subterranean Morlocks" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title:"The War of the Worlds" ,author:"H.G. Wells" ,publication_year :1898 ,category:"Science fiction" ,description:"A novel that features a Martian invasion of England and the struggle of humanity to survive against their superior technology and ruthless methods" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title:"The Island of Dr. Moreau" ,author:"H.G. Wells" ,publication_year :1896 ,category:"Science fiction" ,description:"A novel that features a shipwrecked sailor who discovers a remote island where a mad scientist experiments on animals and creates hybrid creatures with human traits and intelligence" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },{title:"The Invisible Man" ,author:"H.G. Wells" ,publication_year :1897 ,category:"Science fiction" ,description:"A novel that features a scientist who invents a way to change his body’s refractive index and becomes invisible,but also becomes mentally unstable and violent" ,storageQuantity :10 ,availableQuantity :10 ,comments:[] ,sampleImages:[] },{title:"The Shape of Things to Come" ,author:"H.G. Wells" ,publication_year :1933 ,category:"Science fiction" ,description:"A novel that features a history of the future from 1933 to 2106,written by a man who claims to have seen it in a dream induced by a drug" ,storageQuantity :10 ,availableQuantity :10 ,comments:[] ,sampleImages:[] },
    {title:"The Hitchhiker’s Guide to the Galaxy" ,author:"Douglas Adams" ,publication_year :1979 ,category:"Science fiction" ,description:"A novel that features a hapless Earthling who escapes the planet’s destruction with an alien friend and embarks on a hilarious intergalactic adventure" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },
    {title:"The Restaurant at the End of the Universe" ,author:"Douglas Adams" ,publication_year :1980 ,category:"Science fiction" ,description:"A novel that features the continuing adventures of Arthur Dent and his companions as they travel across space and time,encounter a super-intelligent shade of blue,and dine at a place where they can witness the end of all things" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] },
    {title:"Life,the Universe and Everything" ,author:"Douglas Adams" ,publication_year :1982 ,category:"Science fiction" ,description:"A novel that features Arthur Dent and his friends as they try to prevent a galactic war between two factions of aliens who are obsessed with cricket" ,storageQuantity :10 ,availableQuantity :10 ,comments:[] ,sampleImages:[] },
    {title:"So Long,and Thanks for All the Fish" ,author:"Douglas Adams" ,publication_year :1984 ,category:"Science fiction" ,description:"A novel that features Arthur Dent’s return to Earth after its miraculous restoration and his romance with a girl who can talk to dolphins" ,storageQuantity :10 ,availableQuantity :10 ,comments:[] ,sampleImages:[] },
    {title:"Mostly Harmless" ,author:"Douglas Adams" ,publication_year :1992 ,category:"Science fiction" ,description:"A novel that features Arthur Dent’s discovery of an alternate Earth where he has a daughter and his final encounter with his old friends before the ultimate fate of the universe" ,storageQuantity :10 ,availableQuantity :10 ,comments:[],sampleImages:[] }])
    
    #populate the comments fields
    db.comments.insertMany([
    {comment:"The Fellowship of the Ring is an epic adventure that transports you to a magical world filled with adventure and danger." ,book:"The Fellowship of the Ring" ,user:"Sam" ,date:"2021-05-10"},{comment:"The Two Towers is a gripping continuation of the epic tale that takes the reader deeper into the heart of Middle Earth and its characters." ,book:"The Two Towers" ,user:"Smeagol" ,date:"2022-02-14"},{comment:"The Return of the King brings the epic story of the Ring to a satisfying conclusion, leaving the reader feeling fulfilled and satisfied." ,book:"The Return of the King" ,user:"Gandalf" ,date:"2022-12-24"},{comment:"The Hobbit is a charming and whimsical tale that introduces the reader to the fantastical world of Middle Earth and its inhabitants." ,book:"The Hobbit" ,user:"Bilbo" ,date:"2021-07-12"},{comment:"The Silmarillion is a complex and intricate work that delves deep into the mythology and history of Middle Earth." ,book:"The Silmarillion" ,user:"Smeagol" ,date:"2022-01-05"},
    {comment:"Trainspotting is a raw and gritty portrayal of the drug culture in Edinburgh, with vivid characters and a powerful narrative." ,book:"Trainspotting" ,user:"Smeagol" ,date:"2022-06-08"},{comment:"Porno is a brutal and unflinching follow-up to Trainspotting, with a cast of characters that are both familiar and new." ,book:"Porno" ,user:"Gandalf" ,date:"2022-11-11"},{comment:"Skagboys is a prequel to Trainspotting that explores the backstories of the iconic characters and the origins of their drug addiction." ,book:"Skagboys" ,user:"Frodo" ,date:"2022-03-01"},{comment:"The Acid House is a collection of short stories that are surreal, bizarre, and often disturbing, but always thought-provoking." ,book:"The Acid House" ,user:"Sam" ,date:"2023-02-28"},{comment:"Glue is a powerful novel that explores the lives of a group of friends from childhood to adulthood, with all the struggles and triumphs that come with growing up." ,book:"Glue" ,user:"Smeagol" ,date:"2023-03-02"},{comment:"Life on Earth is a comprehensive and informative guide to the natural world, with stunning illustrations and fascinating insights." ,book:"Life on Earth" ,user:"Gandalf" ,date:"2021-08-20"},{comment:"The Private Life of Plants is a fascinating exploration of the world of plants and their behaviors, with stunning photography and in-depth research." ,book:"The Private Life of Plants" ,user:"Frodo" ,date:"2023-01-15"},{comment:"Blue Planet is an eye-opening exploration of our planet's oceans and the incredible creatures that inhabit them." ,book:"Blue Planet" ,user:"Sam" ,date:"2022-04-30"},{comment:"This book is a timeless classic with a thrilling story and unforgettable characters" ,book:"The Lord of the Rings" ,user:"Gandalf" ,date:"2020-01-02"},{comment:"I love how this book takes us on an epic adventure through Middle-earth" ,book:"The Hobbit" ,user:"Frodo" ,date:"2020-01-03"},{comment:"The Silmarillion is a fascinating read for anyone interested in the lore of Middle-earth" ,book:"The Silmarillion" ,user:"Sam" ,date:"2020-01-04"},{comment:"Trainspotting is a gritty and unflinching look at addiction and life in the slums" ,book:"Trainspotting" ,user:"Smeagol" ,date:"2020-01-05"},{comment:"The characters in Glue are so real and relatable, and their stories are beautifully woven together" ,book:"Glue" ,user:"Gandalf" ,date:"2020-01-06"},{comment:"David Attenborough's Life on Earth is a breathtaking exploration of the natural world" ,book:"Life on Earth" ,user:"Frodo" ,date:"2020-01-07"},{comment:"The Private Life of Plants is a fascinating look at the hidden world of plants that surround us" ,book:"The Private Life of Plants" ,user:"Sam" ,date:"2020-01-08"},{comment:"Blue Planet is a visually stunning and informative exploration of our oceans" ,book:"Blue Planet" ,user:"Smeagol" ,date:"2020-01-09"},{comment:"A Life on Our Planet is a powerful call to action to save our planet before it's too late" ,book:"A Life on Our Planet" ,user:"Gandalf" ,date:"2020-01-10"},{comment:"Foundation is a classic science fiction masterpiece that explores the rise and fall of civilizations" ,book:"Foundation" ,user:"Frodo" ,date:"2020-01-11"},{comment:"I, Robot is a thought-provoking collection of stories that explore the relationship between humans and machines" ,book:"I, Robot" ,user:"Sam" ,date:"2020-01-12"},{comment:"The Caves of Steel is a fascinating blend of science fiction and mystery" ,book:"The Caves of Steel" ,user:"Smeagol" ,date:"2020-01-13"},{comment:"The Gods Themselves is a mind-bending exploration of the nature of the universe and the power of science" ,book:"The Gods Themselves" ,user:"Gandalf" ,date:"2020-01-14"},{comment:"The Shining is a terrifying and suspenseful novel that will keep you on the edge of your seat" ,book:"The Shining" ,user:"Frodo" ,date:"2020-01-15"},{comment:"Stephen King's It is a haunting and unforgettable story of childhood fears and horrors" ,book:"It" ,user:"Sam" ,date:"2020-01-16"},{comment:"Carrie is a classic horror story that is both chilling and thought-provoking" ,book:"Carrie" ,user:"Smeagol" ,date:"2020-01-17"},{comment: "I loved the fast-paced, gritty storytelling in Trainspotting." , book: "Trainspotting" , user: "Sam" , date: "2020-02-14"},{comment: "I couldn't put down Porno, the sequel to Trainspotting. It was just as intense and engaging." , book: "Porno" , user: "Gandalf" , date: "2020-03-02"},{comment: "Skagboys gave me a deeper understanding of the characters from Trainspotting. It's a must-read for any fan." , book: "Skagboys" , user: "Frodo" , date: "2020-05-21"},{comment: "The Acid House was a wild ride. The stories were bizarre and unexpected, but I couldn't stop reading." , book: "The Acid House" , user: "Smeagol" , date: "2020-08-07"},{comment: "Glue is a powerful coming-of-age story that explores friendship and family in a small Scottish town. I highly recommend it." , book: "Glue" , user: "Sam" , date: "2021-01-10"},{comment: "Life on Earth is a fascinating exploration of the natural world. I learned so much from this book." , book: "Life on Earth" , user: "Gandalf" , date: "2021-02-27"},{comment: "The Private Life of Plants is a beautifully written and informative book about the lives of plants. I would recommend it to anyone interested in botany." , book: "The Private Life of Plants" , user: "Frodo" , date: "2021-05-19"},{comment: "Blue Planet is a stunning look at the ocean and its inhabitants. The photography alone is worth the price of the book." , book: "Blue Planet" , user: "Smeagol" , date: "2021-08-04"},{comment: "Planet Earth is a captivating exploration of the natural world. It's an incredible achievement in both filmmaking and storytelling." , book: "Planet Earth" , user: "Sam" , date: "2022-02-14"},{comment: "A Life on Our Planet is a powerful call to action to protect our planet and its biodiversity. It's a must-read for anyone concerned about the environment." , book: "A Life on Our Planet" , user: "Gandalf" , date: "2022-03-05"},{comment: "Foundation is a classic sci-fi novel that explores the rise and fall of civilizations. It's a must-read for any fan of the genre." , book: "Foundation" , user: "Frodo" , date: "2022-06-02"},{comment: "I, Robot is a fascinating look at the relationship between humans and robots. Asimov's Three Laws of Robotics are still influential today." , book: "I, Robot" , user: "Smeagol" , date: "2022-09-01"},{comment: "The Caves of Steel is a classic sci-fi mystery that explores the tensions between humans and robots. I couldn't put it down." , book: "The Caves of Steel" , user: "Sam" , date: "2022-11-11"},{comment:"I loved the twists and turns in this book" ,book:"The Murder of Roger Ackroyd" ,user:"Sam" ,date:"2020-02-12"},{comment:"Agatha Christie is a master of mystery" ,book:"Murder on the Orient Express" ,user:"Smeagol" ,date:"2020-03-01"},{comment:"I couldn't put this book down!" ,book:"And Then There Were None" ,user:"Gandalf" ,date:"2020-04-05"},{comment:"Death on the Nile is a classic" ,book:"Death on the Nile" ,user:"Frodo" ,date:"2020-05-23"},{comment:"Orwell's writing is as relevant today as it was when he wrote it" ,book:"1984" ,user:"Sam" ,date:"2020-06-11"},{comment:"Animal Farm is a great satire" ,book:"Animal Farm" ,user:"Smeagol" ,date:"2020-07-01"},{comment:"Homage to Catalonia is a fascinating memoir" ,book:"Homage to Catalonia" ,user:"Gandalf" ,date:"2020-08-02"},{comment:"Keep the Aspidistra Flying is a brilliant critique of consumerism" ,book:"Keep the Aspidistra Flying" ,user:"Frodo" ,date:"2020-09-15"},{comment:"Burmese Days is an eye-opening read" ,book:"Burmese Days" ,user:"Sam" ,date:"2020-10-19"},{comment:"I love the way Agatha Christie weaves a complex mystery" ,book:"A Pocket Full of Rye" ,user:"Smeagol" ,date:"2020-11-11"},{comment:"Oliver Twist is a timeless classic" ,book:"Oliver Twist" ,user:"Gandalf" ,date:"2020-12-07"},{comment:"Great Expectations is a masterpiece" ,book:"Great Expectations" ,user:"Frodo" ,date:"2021-01-02"},{comment:"David Copperfield is a great coming-of-age story" ,book:"David Copperfield" ,user:"Sam" ,date:"2021-02-03"},{comment:"The Time Machine is a thrilling adventure" ,book:"The Time Machine" ,user:"Smeagol" ,date:"2021-03-15"},{comment:"The War of the Worlds is a sci-fi classic" ,book:"The War of the Worlds" ,user:"Gandalf" ,date:"2021-04-23"},{comment:"The Island of Dr. Moreau is a chilling read" ,book:"The Island of Dr. Moreau" ,user:"Frodo" ,date:"2021-05-18"},{comment:"The Invisible Man is a suspenseful tale" ,book:"The Invisible Man" ,user:"Sam" ,date:"2021-06-11"},{comment:"The Shape of Things to Come is a thought-provoking book" ,book:"The Shape of Things to Come" ,user:"Smeagol" ,date:"2021-07-08"},{comment:"Douglas Adams' humor is unparalleled" ,book:"The Hitchhiker’s Guide to the Galaxy" ,user:"Gandalf" ,date:"2021-08-12"},{comment:"This book is a classic!" ,book:"The Hobbit" ,user:"Sam" ,date:"2020-01-01"},{comment:"I absolutely love this book!" ,book:"The Hobbit" ,user:"Smeagol" ,date:"2020-01-02"},{comment:"J.R.R. Tolkien is a master storyteller." ,book:"The Hobbit" ,user:"Gandalf" ,date:"2020-01-02"},{comment:"This book is a must-read for any fantasy fan." ,book:"The Silmarillion" ,user:"Sam" ,date:"2020-01-03"},{comment:"The Silmarillion is a beautiful book that explores the rich history of Middle-earth." ,book:"The Silmarillion" ,user:"Frodo" ,date:"2020-01-04"},{comment:"Trainspotting is a gritty and intense book." ,book:"Trainspotting" ,user:"Sam" ,date:"2020-01-05"},{comment:"I couldn't put Trainspotting down." ,book:"Trainspotting" ,user:"Frodo" ,date:"2020-01-06"},{comment:"Porno is a powerful follow-up to Trainspotting." ,book:"Porno" ,user:"Gandalf" ,date:"2020-01-07"},{comment:"Skagboys is a great addition to the Trainspotting series." ,book:"Skagboys" ,user:"Sam" ,date:"2020-01-08"},{comment:"I was blown away by The Acid House." ,book:"The Acid House" ,user:"Frodo" ,date:"2020-01-09"},{comment:"Glue is a fantastic book that explores the bonds of friendship." ,book:"Glue" ,user:"Gandalf" ,date:"2020-01-10"},{comment:"Life on Earth is a fascinating look at the natural world." ,book:"Life on Earth" ,user:"Sam" ,date:"2020-01-11"},{comment:"The Private Life of Plants is a beautiful and informative book." ,book:"The Private Life of Plants" ,user:"Frodo" ,date:"2020-01-12"},{comment:"Blue Planet is a breathtaking book that showcases the beauty and wonder of the ocean." ,book:"Blue Planet" ,user:"Gandalf" ,date:"2020-01-13"},{comment:"David Attenborough's Planet Earth is a must-watch for anyone who loves nature." ,book:"Planet Earth" ,user:"Sam" ,date:"2020-01-14"},{comment:"A Life on Our Planet is an urgent and important call to action." ,book:"A Life on Our Planet" ,user:"Frodo" ,date:"2020-01-15"},{comment:"Foundation is a classic science fiction series that explores the far future." ,book:"Foundation" ,user:"Gandalf" ,date:"2020-01-16"},{comment:"Asimov's I,Robot is a must-read for any sci-fi fan." ,book:"I,Robot" ,user:"Sam" ,date:"2020-01-17"},{comment:"The Caves of Steel is a gripping sci-fi mystery." ,book:"The Caves of Steel" ,user:"Frodo" ,date:"2020-01-18"},{comment:"I love the world-building in this book" ,book:"The Silmarillion" ,user:"Sam" ,date:"2020-02-01"},{comment:"J.R.R. Tolkien is a master of epic storytelling" ,book:"The Silmarillion" ,user:"Frodo" ,date:"2020-02-01"},{comment:"Trainspotting is a gritty, no-holds-barred look at the reality of addiction" ,book:"Trainspotting" ,user:"Bilbo" ,date:"2020-03-01"},{comment:"This sequel to Trainspotting continues the raw and unapologetic portrayal of drug addiction" ,book:"Porno" ,user:"Bilbo" ,date:"2020-03-02"},{comment:"I found Skagboys to be a heartbreaking but necessary exploration of the root causes of addiction" ,book:"Skagboys" ,user:"Bilbo" ,date:"2020-04-01"},{comment:"The Acid House is a collection of twisted and bizarre short stories that will leave you questioning reality" ,book:"The Acid House" ,user:"Bilbo" ,date:"2020-05-01"},{comment:"I couldn't put down Glue, the characters were so compelling and the story was so engaging" ,book:"Glue" ,user:"Bilbo" ,date:"2020-06-01"},{comment:"Life on Earth is a fascinating exploration of the natural world and our place in it" ,book:"Life on Earth" ,user:"Bilbo" ,date:"2020-07-01"},{comment:"The Private Life of Plants is a beautifully illustrated and informative book about the world of plants" ,book:"The Private Life of Plants" ,user:"Bilbo" ,date:"2020-07-02"},{comment:"Blue Planet is a stunning visual journey into the world's oceans and the creatures that inhabit them" ,book:"Blue Planet" ,user:"Bilbo" ,date:"2020-08-01"},{comment:"Planet Earth is a breathtaking look at the diversity of life on our planet" ,book:"Planet Earth" ,user:"Bilbo" ,date:"2020-09-01"},{comment:"David Attenborough's A Life on Our Planet is a powerful call to action to save our planet from environmental destruction" ,book:"A Life on Our Planet" ,user:"Bilbo" ,date:"2020-10-01"},{comment:"Foundation is a classic sci-fi epic that explores the rise and fall of civilizations" ,book:"Foundation" ,user:"Bilbo" ,date:"2021-01-01"},{comment:"Asimov's I,Robot is a seminal work of science fiction that explores the relationship between humans and robots" ,book:"I,Robot" ,user:"Bilbo" ,date:"2021-02-01"},{comment:"The Caves of Steel is a gripping sci-fi mystery that explores the future of humanity and the challenges we will face" ,book:"The Caves of Steel" ,user:"Bilbo" ,date:"2021-03-01"},{comment:"The Gods Themselves is a mind-bending exploration of alternate realities and the consequences of scientific discovery" ,book:"The Gods Themselves" ,user:"Bilbo" ,date:"2021-04-01"}])

    


    #populate the titles field in the categories collection,with the titles of the books in the books collection for the corresponding category
    var categories = {}
    db.categories.find().forEach(function (category) { categories[category.name] = [];});
    db.books.find().forEach(function (book) { categories[book.category].push(book.title); });
    for (var category in categories) { db.categories.updateOne( { name: category }, { $set: { titles: categories[category] } }); }
    # add the category id to the books collection making the database referential
    
    // This code is used to update the category_id field in the books collection to match the _id field in the categories collection.
    // It also updates the titles field in the categories collection to match the _id field in the books collection.

    db.books.aggregate([{$lookup:{from: "categories",localField: "category",foreignField: "name", as: "category_doc"}},{$addFields: {category_id: {arrayElemAt: [ "$category_doc._id", 0 ] }}},{$unset: "category_doc"},{$out: "books"}]);
    db.categories.find().forEach(function(category) {var bookIds = db.books.find({ category: category.name }).toArray().map(function(book) { return book._id; });
    db.categories.updateOne({ name: category.name },{ $set: { titles: bookIds } });});


    #populate the titles field in the authors collection,with the titles of the books written by the corresponding author

  // This code does the following:
// - Creates a new field called "author_id" in the "books" collection, which
//   is the author's id from the "authors" collection.
// - Removes the "author" field from the "books" collection.
// - Removes the "author_doc" field from the "books" collection.
// - Removes the "author" field from the "authors" collection.
// - Removes the "books" field from the "authors" collection.
// - Removes the "book_ids" field from the "authors" collection.

// This code is used to update the author_id field of the "books" collection.
// This code is used to update the books field of the "authors" collection.
// This code is used to update the book_ids field of the "authors" collection.

db.books.aggregate([
  {
    $lookup: {
      from: "authors",
      localField: "author",
      foreignField: "name",
      as: "author_doc"
    }
  },
  {
    $addFields: {
      author_id: { $arrayElemAt: [ "$author_doc._id", 0 ] }
    }
  },
  {
    $unset: "author_doc"
  },
  {
    $out: "books"
  }
]);

db.authors.find().forEach(function(author) {
  var bookIds = db.books.find({ author: author.name }).toArray().map(function(book) { return book._id; });
  db.authors.updateOne(
    { name: author.name },
    { $set: { books: bookIds } }
  );
});

db.books.find().forEach(function(book) {
  db.authors.updateOne(
    { name: book.author },
    { $addToSet: { book_ids: book._id } }
  );
});

    
# add the book id to the comments collection making the database referential
// This code is used to migrate book titles to book ids in the comments collection.
// The code creates a new field called comment_ids in the books collection.
// Then the code uses the $map operator to create an array of comment ids and stores them in the comment_ids field.
// The code then uses the $unset operator to remove the comments_doc field.
// Finally, the code loops through the comments collection and updates the book field with the book_id field.

db.books.aggregate([
  {
    $lookup: {
      from: "comments",
      localField: "title",
      foreignField: "book",
      as: "comments_doc"
    }
  },
  {
    $addFields: {
      comment_ids: { $map: { input: "$comments_doc", as: "comment", in: "$$comment._id" } }
    }
  },
  {
    $unset: "comments_doc"
  }
]).forEach(function(book) {
  db.comments.updateMany(
    { book: book.title },
    { $set: { book_id: book._id } }
  );
});

# add the comment ids to the books collection making the database referential
// The purpose of this code is to update the 'comments' field in the books collection with the comment IDs from the 'comments' collection.
// The code uses the book title from the 'comments' collection to join the collections, and then adds the book ID from the 'books' collection to the comment document as a new field called 'book_id'.
// The code then removes the book document from the comment document, and groups the comment documents by the book_id field.
// The code then iterates through each result and uses the book_id field to update the 'comments' array in the 'books' collection with the comment_ids field from the result.

db.comments.aggregate([
  {
    $lookup: {
      from: "books",
      localField: "book",
      foreignField: "title",
      as: "book_doc"
    }
  },
  {
    $addFields: {
      book_id: { $arrayElemAt: [ "$book_doc._id", 0 ] }
    }
  },
  {
    $unset: "book_doc"
  },
  {
    $group: {
      _id: "$book_id",
      comment_ids: { $push: "$_id" }
    }
  }
]).forEach(function(result) {
  db.books.updateOne(
    { _id : result._id },
    { $addToSet : { comments : { $each : result.comment_ids } } }
  );
});

// Add user_id to comments
db.comments.find().forEach(function(comment) {
  var user = db.users.findOne({ username: comment.user });
  db.comments.updateOne(
    { _id: comment._id },
    { $set: { user_id: user._id } }
  );
});

// Add comments to books
db.books.find().forEach(function(book) {
  var comments = db.comments.find({ book_id: book._id }).toArray();
  db.books.updateOne(
    { _id: book._id },
    { $set: { comments: comments } }
  );
});

# add the book_id to the sampleImages collection making the database referential
// This code is used to migrate book titles to book ids in the sampleImages collection.
// The code creates a new field called book_id in the sampleImages collection.
// Then the code uses the $map operator to create an array of book ids and stores them in the book_id field.
// The code then uses the $unset operator to remove the books_doc field.
// Finally, the code loops through the sampleImages collection and updates the book field with the book_id field.
db.sampleImages.aggregate([
  {
    $lookup: {
      from: "books",
      localField: "book",
      foreignField: "title",
      as: "books_doc"
    }
  },
  {
    $addFields: {
      book_id: { $arrayElemAt: [ "$books_doc._id", 0 ] }
    }
  },
  {
    $unset: "books_doc"
  }
]).forEach(function(sampleImage) {
  db.sampleImages.updateMany(
    { book: sampleImage.book },
    { $set: { book_id: sampleImage._id } }
  );
});

// add the sampleImages to the books collection making the database referential
// The purpose of this code is to update the 'sampleImages' field in the books collection with the sampleImage IDs from the 'sampleImages' collection.
// The code uses the book title from the 'sampleImages' collection to join the collections, and then adds the book ID from the 'books' collection to the sampleImage document as a new field called 'book_id'.
// The code then removes the book document from the sampleImage document, and groups the sampleImage documents by the book_id field.
// The code then iterates through each result and uses the book_id field to update the 'sampleImages' array in the 'books' collection with the sampleImage_ids field from the result.
db.sampleImages.aggregate([
  {
    $lookup: {
      from: "books",
      localField: "book",
      foreignField: "title",
      as: "book_doc"
    }
  },
  {
    $addFields: {
      book_id: { $arrayElemAt: [ "$book_doc._id", 0 ] }
    }
  },
  {
    $unset: "book_doc"
  },
  {
    $group: {
      _id: "$book_id",
      sampleImage_ids: { $push: "$_id" }
    }
  }
]).forEach(function(result) {
  db.books.updateOne(
    { _id: result._id },
    { $set: { sampleImages: result.sampleImage_ids } }
  );
});

# add the sampleImages to the books collection making the database referential
// The purpose of this code is to update the 'sampleImages' field in the books collection with the sampleImage IDs from the 'sampleImages' collection.
// The code uses the book title from the 'sampleImages' collection to join the collections, and then adds the book ID from the 'books' collection to the sampleImage document as a new field called 'book_id'.
// The code then removes the book document from the sampleImage document, and groups the sampleImage documents by the book_id field.
// The code then iterates through each result and uses the book_id field to update the 'sampleImages' array in the 'books' collection with the sampleImage_ids field from the result.
db.sampleImages.aggregate([
  {
    $lookup: {
      from: "books",
      localField: "book",
      foreignField: "title",
      as: "book_doc"
    }
  },
  {
    $addFields: {
      book_id: { $arrayElemAt: [ "$book_doc._id", 0 ] }
    }
  },
  {
    $unset: "book_doc"
  },
  {
    $group: {
      _id: "$book_id",
      sampleImage_ids: { $push: "$_id" }
    }
  }
]).forEach(function(result) {
  db.books.updateOne(
    { _id: result._id },
    { $set: { sampleImages: result.sampleImage_ids } }
  );
});




# Use case commands

# 1. Find all books in a specific category name published within a given date range
db.books.find({category: "Fantasy", publication_year: {$gte: (1950), $lte:(2021)}}).pretty();


#2. Find all books by specific authors
db.books.find({author: "Stephen King"}).pretty();


#3. Write a comment on a book
const bookTitle = 'Carrie';
const userName = 'Smeagol';
const commentText = 'Carrie is a classic horror story that is both chilling and thought-provoking';

const book = db.books.findOne({ title: bookTitle });
const user = db.users.findOne({ username: userName });

if (book && user) {
  const comment = {
    _id: ObjectId(),
    comment: commentText,
    book: bookTitle,
    user: userName,
    date: new Date().toISOString(),
    book_id: book._id,
    user_id: user._id
  };
  
  db.books.updateOne({ _id: book._id }, { $push: { comments: comment } });
  db.users.updateOne({ _id: user._id }, { $push: { comments: comment } });
  
  print('Comment added successfully');
} else {
  print('Book or user not found');
}


#4. Show all the details of a book, including all comments and images (e.g., sample pages),
where the book description matches a specified pattern, for example, the word “NoSQL
database” appears in the book description.
db.books.aggregate([ { $match: { description: { $regex: /story/i } } }, { $lookup: { from: "comments", localField: "_id", foreignField: "book_id", as: "comments" } }, { $lookup: { from: "images", localField: "_id", foreignField: "book_id", as: "sampleImages" } }])

#5 Devise and run a MongoDB aggregation pipeline query to find the average
storage quantities for each book category.
db.books.aggregate([
  {
    $group: {
      _id: "$category",
      avgStorageQuantity: { $avg: "$storageQuantity" }
    }
  }
])





